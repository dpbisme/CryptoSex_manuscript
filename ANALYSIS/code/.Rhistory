theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"),
panel.border = element_rect(colour = "black", fill=NA, size=2))
ggplot(myTopHits2, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
coord_fixed() +
geom_point(mapping =NULL, myTopHits2.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=2) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=2) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=2) +
labs(title="In vitro females vs. in vivo asexual stages",
subtitle = "Volcano plot comparing expression of genes between \nfemales and asexual stages sorted from in vitro cultures \nbased on COWP1 and ENO, respectively. \nThis plot corresponds to Figure 3b in the manuscript.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(myTopHits2, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
coord_fixed() +
geom_point(mapping =NULL, myTopHits2.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=2) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=2) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=2) +
labs(title="In vitro females vs. in vivo asexual stages",
subtitle = "Volcano plot comparing expression of genes between \nfemales and asexual stages sorted from in vitro cultures \nbased on COWP1 and ENO, respectively. \nThis plot corresponds to Figure 3b in the manuscript.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"))
ggplot(myTopHits2, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
coord_fixed() +
geom_point(mapping =NULL, myTopHits2.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=2) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=2) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=2) +
labs(title="In vitro females vs. in vivo asexual stages",
subtitle = "Volcano plot comparing expression of genes between \nfemales and asexual stages sorted from in vitro cultures \nbased on COWP1 and ENO, respectively. \nThis plot corresponds to Figure 3b in the manuscript.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(myTopHits1, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
coord_fixed() +
geom_point(mapping =NULL, myTopHits1.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits1.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits1.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits1.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=2) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=2) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=2) +
labs(title="In vitro females vs. in vivo asexual stages",
subtitle = "Volcano plot comparing gene expression between \nfemales and asexual stages sorted from in vitro cultures \nbased on COWP1 and ENO, respectively. \nThis plot corresponds to Figure 3b in the manuscript.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(myTopHits1, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
coord_fixed() +
geom_point(mapping =NULL, myTopHits1.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits1.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits1.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits1.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=2) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=2) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=2) +
#labs(title="In vitro females vs. in vivo asexual stages",
#subtitle = "Volcano plot comparing gene expression between \nfemales and asexual stages sorted from in vitro cultures \nbased on COWP1 and ENO, respectively. \nThis plot corresponds to Figure 3b in the manuscript.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
ggsave("vplot1.png")
ggplot(myTopHits2, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
coord_fixed() +
geom_point(mapping =NULL, myTopHits2.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=2) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=2) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=2) +
#labs(title="In vitro females vs. in vivo asexual stages",
#subtitle = "Volcano plot comparing expression of genes between \nfemales and asexual stages sorted from in vitro cultures \nbased on COWP1 and ENO, respectively. \nThis plot corresponds to Figure 3b in the manuscript.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
ggsave("vplot2.png")
log2.cpm.filtered.norm <- t(cpm(myDGEList.filtered.norm, log=TRUE))
log2.cpm.filtered.norm.batchCorrected <- empiricalBayesLM(
log2.cpm.filtered.norm,
removedCovariates = targets$batch,
fitToSamples = targets$sex_stage=="asexual")$adjustedData;
log2.cpm.filtered.norm <- t(cpm(myDGEList.filtered.norm, log=TRUE))
log2.cpm.filtered.norm.batchCorrected <- empiricalBayesLM(
log2.cpm.filtered.norm,
removedCovariates = targets$batch,
fitToSamples = targets$sex_stage=="asexual")$adjustedData;
plot_grid(p1, p2, labels = c("A", "B"))
log2.cpm.filtered.norm <- t(cpm(myDGEList.filtered.norm, log=TRUE))
log2.cpm.filtered.norm.batchCorrected <- empiricalBayesLM(
log2.cpm.filtered.norm,
removedCovariates = targets$batch,
fitToSamples = targets$sex_stage=="asexual")$adjustedData;
ggplot(pca.res.df, aes(x=PC1, y=PC2, color=sex, shape=origin)) +
geom_point(size=4) +
coord_fixed() +
theme(legend.position="right") +
xlab(paste0("PC1 (",pc.per[1],"%",")")) +
ylab(paste0("PC2 (",pc.per[2],"%",")")) +
labs(title="PCA showing all data",
subtitle = "Principal component analysis (PCA) \nshowing all samples after batch correction. \nClear separation based on stage and sex. \nThis plot corresponds to Figure XX in the manuscript.",
caption=paste0("produced on ", Sys.time())) +
theme_bw() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16),
plot.title = element_text(face="bold"))
pca.res <- prcomp(t(log2.cpm.filtered.norm), scale.=F, retx=T)
pc.var<-pca.res$sdev^2
pc.per<-round(pc.var/sum(pc.var)*100, 1)
pca.res.df <- as_tibble(pca.res$x)
ggplot(pca.res.df, aes(x=PC1, y=PC2, color=sex[1:12], shape=origin[1:12])) +
geom_point(size=4) +
theme(legend.position="right") +
xlab(paste0("PC1 (",pc.per[1],"%",")")) +
ylab(paste0("PC2 (",pc.per[2],"%",")")) +
labs(title="PCA of sort-purified female and asexual stage C. parvum",
subtitle = "Principal component analysis (PCA) showing clear separation \nbetween females and asexual stages sorted from in vitro cultures \nbased on COWP1 and ENO, respectively. \nThe plot corresponds to Figure XX in the manuscript.",
caption=paste0("produced on ", Sys.time())) +
theme_bw() +
theme(plot.title = element_text(face="bold"))
# copy and paste in your essential code from the step 2 script
# because each code chunk in an Rmarkdown should only have one graphical output,
# we need make a few changes to this code
# also get rid of title, subtitle, etc from these graphs
targets <-read_tsv("StudyDesign.txt")
# set file paths to your mapped data
cfiles <- file.path("../readMapping", targets$sample, "abundance.h5")
Txi_gene <-tximport(cfiles,
type = "kallisto",
tx2gene = cTx,
txOut = FALSE, #false collapses transcripts to genes
countsFromAbundance = "lengthScaledTPM")
save(Txi_gene, file = "Txi_gene")
origin <- as.factor(targets$origin)
rep <- as.factor(targets$rep)
group <- as.factor(paste(targets$sex_stage, targets$origin, sep = "_"))
batch <- as.factor(targets$exper)
SampleLabels <- targets$sample
gt(targets)
load("Txi_gene")
Txi_gene <- Txi_gene$counts[,1:12]
myDGEList <- DGEList(Txi_gene)
# use the 'cpm' function from EdgeR to get counts per million
log2.cpm <- cpm(myDGEList, log=TRUE)
log2.cpm.df <- as_tibble(log2.cpm)
colnames(log2.cpm.df) <- SampleLabels[1:12]
log2.cpm.df <- melt(log2.cpm.df)
colnames(log2.cpm.df) <- c("sample", "expression")
p1 <- ggplot(log2.cpm.df, aes(x=sample, y=expression, fill=sample)) +
geom_violin(trim = FALSE, show.legend = FALSE) +
stat_summary(fun.y = "median",
geom = "point",
shape = 124, size = 6,
color = "black",
show.legend = FALSE) +
labs(y="log2 expression", x = "sample") +
coord_flip() +
theme_bw()
cpm <- cpm(myDGEList)
#keeping only those genes with more than 10 cpm in at least 4 samples
keepers <- rowSums(cpm>10)>=4
myDGEList.filtered <- myDGEList[keepers,]
myDGEList.filtered.norm <- calcNormFactors(myDGEList.filtered, method = "TMM")
log2.cpm.filtered.norm <- cpm(myDGEList.filtered.norm, log=TRUE)
log2.cpm.filtered.norm.df <- as_tibble(log2.cpm.filtered.norm)
colnames(log2.cpm.filtered.norm.df) <- SampleLabels[1:12]
log2.cpm.filtered.norm.df <- melt(log2.cpm.filtered.norm.df)
colnames(log2.cpm.filtered.norm.df) <- c("sample", "expression")
normData <- as_tibble(log2.cpm.filtered.norm, rownames = "geneSymbol")
colnames(normData) <- c("geneSymbol", SampleLabels[1:12])
write_tsv(normData, "normData.txt")
p2 <- ggplot(log2.cpm.filtered.norm.df, aes(x=sample, y=expression, fill=sample)) +
geom_violin(trim = FALSE, show.legend = FALSE) +
stat_summary(fun.y = "median",
geom = "point",
shape = 124, size = 6,
color = "black",
show.legend = FALSE) +
labs(y="log2 expression", x = "sample") +
coord_flip() +
theme_bw()
plot_grid(p1, p2, labels = c("A", "B"))
pca.res <- prcomp(t(log2.cpm.filtered.norm), scale.=F, retx=T)
pc.var<-pca.res$sdev^2
pc.per<-round(pc.var/sum(pc.var)*100, 1)
pca.res.df <- as_tibble(pca.res$x)
ggplot(pca.res.df, aes(x=PC1, y=PC2, color=sex[1:12], shape=origin[1:12])) +
geom_point(size=4) +
theme(legend.position="right") +
xlab(paste0("PC1 (",pc.per[1],"%",")")) +
ylab(paste0("PC2 (",pc.per[2],"%",")")) +
labs(title="PCA of sort-purified female and asexual stage C. parvum",
subtitle = "Principal component analysis (PCA) showing clear separation \nbetween females and asexual stages sorted from in vitro cultures \nbased on COWP1 and ENO, respectively. \nThe plot corresponds to Figure XX in the manuscript.",
caption=paste0("produced on ", Sys.time())) +
theme_bw() +
theme(plot.title = element_text(face="bold"))
design <- model.matrix(~0 + group[1:12, drop = TRUE])
colnames(design) <- levels(group[1:12, drop = TRUE])
v.myDGEList.filtered.norm <- voom(myDGEList.filtered.norm, design, plot = FALSE)
fit <- lmFit(v.myDGEList.filtered.norm, design)
#setting up contrast matrix for two main pairwise comparisons
contrast.matrix <- makeContrasts(female.vs.asexual_invitro = female_invitro - asexual_invitro,
female_invivo.vs.invitro = female_invivo - female_invitro,
levels=design)
fits <- contrasts.fit(fit, contrast.matrix)
ebFit <- eBayes(fits)
myTopHits1 <- topTable(ebFit, adjust ="BH", coef=1, number=10000, sort.by="logFC")
myTopHits1 <- as_tibble(myTopHits1, rownames = "geneSymbol")
ggplot(myTopHits1, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=2) +
ylim(-0.5,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=1) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=1) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=1) +
labs(title="In vitro females vs. in vivo asexual stages",
subtitle = "Volcano plot comparing expression of genes between females and asexual stages \nsorted from in vitro cultures based on COWP1 and ENO, respectively. \nThe plot corresponds to Figure 3b in the manuscript.",
caption=paste0("produced on ", Sys.time())) +
theme_bw() +
theme(plot.title = element_text(face="bold"))
myTopHits2 <- topTable(ebFit, adjust ="BH", coef=2, number=10000, sort.by="logFC")
myTopHits2 <- as_tibble(myTopHits2, rownames = "geneSymbol")
ggplot(myTopHits2, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=2) +
ylim(-0.5,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=1) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=1) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=1) +
labs(title="Females, in vivo vs. in vitro",
subtitle = "Volcano plot comparing expression of genes between females \nsorted from in vivo infections of mice versus from in vitro cultures. \nThe plot corresponds to Figure 3c in the manuscript.",
caption=paste0("produced on ", Sys.time())) +
theme_bw() +
theme(plot.title = element_text(face="bold"))
colnames(v.myDGEList.filtered.norm$E) <- SampleLabels[1:12]
results <- decideTests(ebFit, method="global", adjust.method="BH", p.value=0.01, lfc=1)
DiffGenes <- v.myDGEList.filtered.norm$E[results[,1] !=0 | results[,2] !=0,]
#subsetting matrix so only relevant samples are shown in the heatmap below
myheatcol <-colorRampPalette(colors=c("blue","white", "red"))(100)
clustRows <- hclust(as.dist(1-cor(t(DiffGenes), method="pearson")), method="complete")
clustColumns <- hclust(as.dist(1-cor(DiffGenes, method="spearman")), method="complete")
clust.assign <- cutree(clustRows, k=5)
module.color <- rainbow(length(unique(clust.assign)), start=0.1, end=0.9)
module.color <- module.color[as.vector(clust.assign)]
heatmap.2(DiffGenes,
Rowv=as.dendrogram(clustRows),
Colv=NA,
RowSideColors=module.color,
col=myheatcol, scale='row',
labRow=NA,
density.info="none", trace="none",
margins = c(10,20),
cexRow=1, cexCol=0.75)
leadingEdge <- read_tsv("../functionalEnrichmentAnalysis/leadingEdge.txt")
#convert to a matrix so you can carry out clustering
carb_metab <- leadingEdge %>%
dplyr::rename(geneSymbol = carbohydrate_metabolism) %>%
dplyr::select(-"oocyst_proteomics", -"DNA_metab", -"oxidation-reduction") %>%
dplyr::left_join(normData, by="geneSymbol") %>%
dplyr::filter(!is.na(geneSymbol))
carb_metab <- column_to_rownames(carb_metab, 'geneSymbol')
carb_metab <- as.matrix(carb_metab)
heatmap.2(carb_metab,
Rowv=NA,
Colv=NA,
col=myheatcol, scale='row',
density.info="none", trace="none",
margins = c(10,18),
cexRow=1, cexCol=0.75)
oocyst_proteomics <- leadingEdge %>%
dplyr::rename(geneSymbol = oocyst_proteomics) %>%
dplyr::select(-"carbohydrate_metabolism", -"DNA_metab", -"oxidation-reduction") %>%
dplyr::left_join(normData, by="geneSymbol") %>%
dplyr::filter(!is.na(geneSymbol))
oocyst_proteomics <- as.matrix(column_to_rownames(oocyst_proteomics, 'geneSymbol'))
heatmap.2(oocyst_proteomics,
Rowv=NA,
Colv=NA,
col=myheatcol, scale='row',
key = FALSE,
density.info="none", trace="none",
margins = c(10,18),
cexRow=0.75, cexCol=0.75)
DNA_metab <- leadingEdge %>%
dplyr::rename(geneSymbol = DNA_metab) %>%
dplyr::select(-"carbohydrate_metabolism", -"oocyst_proteomics", -"oxidation-reduction") %>%
dplyr::left_join(normData, by="geneSymbol") %>%
dplyr::filter(!is.na(geneSymbol))
DNA_metab <- as.matrix(column_to_rownames(DNA_metab, 'geneSymbol'))
heatmap.2(DNA_metab,
Rowv=NA,
Colv=NA,
col=myheatcol, scale='row',
key = FALSE,
density.info="none", trace="none",
margins = c(10,18),
cexRow=0.75, cexCol=0.75)
oxidoreductase <- leadingEdge %>%
dplyr::rename(geneSymbol = "oxidation-reduction") %>%
dplyr::select(-"carbohydrate_metabolism", -"oocyst_proteomics", -"DNA_metab") %>%
dplyr::left_join(normData, by="geneSymbol") %>%
dplyr::filter(!is.na(geneSymbol))
oxidoreductase <- as.matrix(column_to_rownames(oxidoreductase, 'geneSymbol'))
heatmap.2(oxidoreductase,
Rowv=NA,
Colv=NA,
col=myheatcol, scale='row',
key = FALSE,
density.info="none", trace="none",
margins = c(10,18),
cexRow=0.75, cexCol=0.75)
myTopHits1.carb_metab <- subset(myTopHits1, geneSymbol %in% rownames(carb_metab))
myTopHits1.oocyst_proteomics <- subset(myTopHits1, geneSymbol %in% rownames(oocyst_proteomics))
myTopHits1.DNA_metab <- subset(myTopHits1, geneSymbol %in% rownames(DNA_metab))
myTopHits1.oxidoreductase <- subset(myTopHits1, geneSymbol %in% rownames(oxidoreductase))
ggplot(myTopHits1, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
coord_fixed() +
geom_point(mapping =NULL, myTopHits1.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits1.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits1.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits1.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=2) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=2) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=2) +
#labs(title="In vitro females vs. in vivo asexual stages",
#subtitle = "Volcano plot comparing gene expression between \nfemales and asexual stages sorted from in vitro cultures \nbased on COWP1 and ENO, respectively. \nThis plot corresponds to Figure 3b in the manuscript.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
myTopHits2.carb_metab <- subset(myTopHits2, geneSymbol %in% rownames(carb_metab))
myTopHits2.oocyst_proteomics <- subset(myTopHits2, geneSymbol %in% rownames(oocyst_proteomics))
myTopHits2.DNA_metab <- subset(myTopHits2, geneSymbol %in% rownames(DNA_metab))
myTopHits2.oxidoreductase <- subset(myTopHits2, geneSymbol %in% rownames(oxidoreductase))
ggplot(myTopHits2, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
coord_fixed() +
geom_point(mapping =NULL, myTopHits2.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits2.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=2) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=2) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=2) +
labs(title="In vitro females vs. in vivo asexual stages",
subtitle = "Volcano plot comparing expression of genes between \nfemales and asexual stages sorted from in vitro cultures \nbased on COWP1 and ENO, respectively. \nThis plot corresponds to Figure 3b in the manuscript.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
load("Txi_gene")
myDGEList <- DGEList(Txi_gene$counts)
# use the 'cpm' function from EdgeR to get counts per million
log2.cpm <- cpm(myDGEList, log=TRUE)
log2.cpm.df <- as_tibble(log2.cpm)
colnames(log2.cpm.df) <- SampleLabels
log2.cpm.df <- melt(log2.cpm.df)
colnames(log2.cpm.df) <- c("sample", "expression")
p1 <- ggplot(log2.cpm.df, aes(x=sample, y=expression, fill=sample)) +
geom_violin(trim = FALSE, show.legend = FALSE) +
stat_summary(fun.y = "median", geom = "point", shape = 124, size = 6, color = "black", show.legend = FALSE) +
labs(y="log2 expression", x = "sample") +
coord_flip() +
theme_bw()
cpm <- cpm(myDGEList)
#keeping only genes with > 10 cpm in at least 3 samples
keepers <- rowSums(cpm>10)>=3
myDGEList.filtered <- myDGEList[keepers,]
myDGEList.filtered.norm <- calcNormFactors(myDGEList.filtered, method = "TMM")
log2.cpm.filtered.norm <- cpm(myDGEList.filtered.norm, log=TRUE)
log2.cpm.filtered.norm.df <- as_tibble(log2.cpm.filtered.norm)
colnames(log2.cpm.filtered.norm.df) <- SampleLabels
log2.cpm.filtered.norm.df <- melt(log2.cpm.filtered.norm.df)
colnames(log2.cpm.filtered.norm.df) <- c("sample", "expression")
normData <- as_tibble(log2.cpm.filtered.norm, rownames = "geneSymbol")
colnames(normData) <- c("geneSymbol", SampleLabels)
write_tsv(normData, "normData_combo.txt")
p2 <- ggplot(log2.cpm.filtered.norm.df, aes(x=sample, y=expression, fill=sample)) +
geom_violin(trim = FALSE, show.legend = FALSE) +
stat_summary(fun.y = "median", geom = "point", shape = 124, size = 6, color = "black", show.legend = FALSE) +
labs(y="log2 expression", x = "sample") +
coord_flip() +
theme_bw()
plot_grid(p1, p2, labels = c("A", "B"))
pca.res <- prcomp(t(log2.cpm.filtered.norm), scale.=F, retx=T)
pc.var<-pca.res$sdev^2
pc.per<-round(pc.var/sum(pc.var)*100, 1)
pca.res.df <- as_tibble(pca.res$x)
p1 <- ggplot(pca.res.df, aes(x=PC1, y=PC2, color=sex, shape=origin)) +
geom_point(size=3) +
theme(legend.position="right") +
xlab(paste0("PC1 (",pc.per[1],"%",")")) +
ylab(paste0("PC2 (",pc.per[2],"%",")")) +
theme_bw() +
coord_fixed()
p2 <- ggplot(pca.res.df, aes(x=PC1, y=PC2, color=batch)) +
geom_point(size=3) +
theme(legend.position="right") +
xlab(paste0("PC1 (",pc.per[1],"%",")")) +
ylab(paste0("PC2 (",pc.per[2],"%",")")) +
theme_bw() +
coord_fixed()
plot_grid(p1, p2, labels = c("A", "B"))
log2.cpm.filtered.norm <- t(cpm(myDGEList.filtered.norm, log=TRUE))
log2.cpm.filtered.norm.batchCorrected <- empiricalBayesLM(
log2.cpm.filtered.norm,
removedCovariates = targets$batch,
fitToSamples = targets$sex_stage=="asexual")$adjustedData;
pca.res <- prcomp(log2.cpm.filtered.norm.batchCorrected, scale.=F, retx=T)
pc.var<-pca.res$sdev^2
pc.per<-round(pc.var/sum(pc.var)*100, 1)
pca.res.df <- as_tibble(pca.res$x)
ggplot(pca.res.df, aes(x=PC1, y=PC2, color=sex, shape=origin)) +
geom_point(size=4) +
coord_fixed() +
theme(legend.position="right") +
xlab(paste0("PC1 (",pc.per[1],"%",")")) +
ylab(paste0("PC2 (",pc.per[2],"%",")")) +
labs(title="PCA showing all data",
subtitle = "Principal component analysis (PCA) \nshowing all samples after batch correction. \nClear separation based on stage and sex. \nThis plot corresponds to Figure XX in the manuscript.",
caption=paste0("produced on ", Sys.time())) +
theme_bw() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16),
plot.title = element_text(face="bold"))
setRepositories()
install_github("vqv/ggbiplot")
library(devtools)
install_github("vqv/ggbiplot")
install_github("vqv/ggbiplot")
library(devtools)
install_github("vqv/ggbiplot")
library(rmarkdown)
library(knitr)
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE, linewidth=60)
ggplot(pca.res.df, aes(x=PC1, y=PC2, color=sex, shape=origin)) +
geom_point(size=4) +
coord_fixed() +
theme(legend.position="right") +
xlab(paste0("PC1 (",pc.per[1],"%",")")) +
ylab(paste0("PC2 (",pc.per[2],"%",")")) +
labs(title="PCA showing all data",
subtitle = "Principal component analysis (PCA) \nshowing all samples after batch correction. \nClear separation based on stage and sex. \nThis plot corresponds to Figure XX in the manuscript.",
caption=paste0("produced on ", Sys.time())) +
theme_bw() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16),
plot.title = element_text(face="bold"))
library(tidyverse)
library(tidyverse)
library(reshape2)
library(tximport)
library(RColorBrewer)
library(genefilter)
library(genefilter)
library(edgeR)
library(matrixStats)
library(gplots)
library(limma)
library(gt)
library(cowplot)
library(UpSetR)
library(WGCNA)
cTx <-read_tsv("Cryptosporidium_parvum_iowa_ii.ASM16534v1.37.ena.tsv")
