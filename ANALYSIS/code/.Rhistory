color = "black",
show.legend = FALSE) +
labs(y="log2 expression", x = "sample",
title="raw data") +
coord_flip() +
theme_bw()
# filtering to keep only genes that had > 10 cpm in at least 4 samples
cpm <- cpm(myDGEList)
keepers <- rowSums(cpm>10)>=4
myDGEList.filtered <- myDGEList[keepers,]
# normalize using TMM method from calnormfactors function in EdgeR package
myDGEList.filtered.norm <- calcNormFactors(myDGEList.filtered, method = "TMM")
log2.cpm.filtered.norm <- cpm(myDGEList.filtered.norm, log=TRUE)
log2.cpm.filtered.norm.df <- as_tibble(log2.cpm.filtered.norm)
colnames(log2.cpm.filtered.norm.df) <- SampleLabels[1:12]
log2.cpm.filtered.norm.df <- melt(log2.cpm.filtered.norm.df)
colnames(log2.cpm.filtered.norm.df) <- c("sample", "expression")
normData <- as_tibble(log2.cpm.filtered.norm, rownames = "geneSymbol")
colnames(normData) <- c("geneSymbol", SampleLabels[1:12])
write_tsv(normData, "normData.txt")
# plot of signal distribution again to see effect of filtering an normalization
p2 <- ggplot(log2.cpm.filtered.norm.df, aes(x=sample, y=expression, fill=sample)) +
geom_violin(trim = FALSE, show.legend = FALSE) +
stat_summary(fun.y = "median",
geom = "point",
shape = 124, size = 6,
color = "black",
show.legend = FALSE) +
labs(y="log2 expression", x = "sample",
title="after filtering & normalization") +
coord_flip() +
theme_bw()
plot_grid(p1, p2, labels = c("A", "B"))
load("Txi_gene")
# taking only the first 12 samples in the dataset,
# which correspond to batches 2 and 3
Txi_gene <- Txi_gene$counts[,1:12]
# use EdgeR create DGEList object from counts
myDGEList <- DGEList(Txi_gene)
# use the 'cpm' function from EdgeR to get counts per million
log2.cpm <- cpm(myDGEList, log=TRUE)
log2.cpm.df <- as_tibble(log2.cpm)
colnames(log2.cpm.df) <- SampleLabels[1:12]
log2.cpm.df <- melt(log2.cpm.df)
colnames(log2.cpm.df) <- c("sample", "expression")
# plot of signal distribution for raw data
p1 <- ggplot(log2.cpm.df, aes(x=sample, y=expression, fill=sample)) +
geom_violin(trim = FALSE, show.legend = FALSE) +
stat_summary(fun.y = "median",
geom = "point",
shape = 124, size = 6,
color = "black",
show.legend = FALSE) +
labs(y="log2 expression", x = "sample",
title="raw data") +
coord_flip() +
theme_bw()
# filtering to keep only genes that had > 10 cpm in at least 4 samples
cpm <- cpm(myDGEList)
keepers <- rowSums(cpm>10)>=4
myDGEList.filtered <- myDGEList[keepers,]
# normalize using TMM method from calnormfactors function in EdgeR package
myDGEList.filtered.norm <- calcNormFactors(myDGEList.filtered, method = "TMM")
log2.cpm.filtered.norm <- cpm(myDGEList.filtered.norm, log=TRUE)
log2.cpm.filtered.norm.df <- as_tibble(log2.cpm.filtered.norm)
colnames(log2.cpm.filtered.norm.df) <- SampleLabels[1:12]
log2.cpm.filtered.norm.df <- melt(log2.cpm.filtered.norm.df)
colnames(log2.cpm.filtered.norm.df) <- c("sample", "expression")
normData <- as_tibble(log2.cpm.filtered.norm, rownames = "geneSymbol")
colnames(normData) <- c("geneSymbol", SampleLabels[1:12])
write_tsv(normData, "normData.txt")
# plot of signal distribution again to see effect of filtering an normalization
p2 <- ggplot(log2.cpm.filtered.norm.df, aes(x=sample, y=expression, fill=sample)) +
geom_violin(trim = FALSE, show.legend = FALSE) +
stat_summary(fun.y = "median",
geom = "point",
shape = 124, size = 6,
color = "black",
show.legend = FALSE) +
labs(y="log2 expression", x = "sample",
title="filtered, normalized data") +
coord_flip() +
theme_bw()
plot_grid(p1, p2, labels = c("A", "B"))
load("Txi_gene")
# taking only the last 9 samples in the dataset,
# which correspond to batch 1
Txi_gene2 <- Txi_gene$counts[,13:21]
# use EdgeR create DGEList object from counts
myDGEList2 <- DGEList(Txi_gene2)
# use the 'cpm' function from EdgeR to get counts per million
log2.cpm2 <- cpm(myDGEList2, log=TRUE)
log2.cpm.df2 <- as_tibble(log2.cpm2)
colnames(log2.cpm.df2) <- SampleLabels[13:21]
log2.cpm.df2 <- melt(log2.cpm.df2)
colnames(log2.cpm.df2) <- c("sample", "expression")
# plot of signal distribution for raw data
p1 <- ggplot(log2.cpm.df2, aes(x=sample, y=expression, fill=sample)) +
geom_violin(trim = FALSE, show.legend = FALSE) +
stat_summary(fun.y = "median",
geom = "point",
shape = 124, size = 6,
color = "black",
show.legend = FALSE) +
labs(y="log2 expression", x = "sample",
title = "raw data") +
coord_flip() +
theme_bw()
# filtering to keep only genes that had > 10 cpm in at least 3 samples
cpm2 <- cpm(myDGEList2)
keepers2 <- rowSums(cpm2>10)>=3
myDGEList.filtered2 <- myDGEList2[keepers2,]
# normalize using TMM method from calnormfactors function in EdgeR package
myDGEList.filtered.norm2 <- calcNormFactors(myDGEList.filtered2, method = "TMM")
log2.cpm.filtered.norm2 <- cpm(myDGEList.filtered.norm2, log=TRUE)
log2.cpm.filtered.norm.df2 <- as_tibble(log2.cpm.filtered.norm2)
colnames(log2.cpm.filtered.norm.df2) <- SampleLabels[13:21]
log2.cpm.filtered.norm.df2 <- melt(log2.cpm.filtered.norm.df2)
colnames(log2.cpm.filtered.norm.df2) <- c("sample", "expression")
normData2 <- as_tibble(log2.cpm.filtered.norm2, rownames = "geneSymbol")
colnames(normData2) <- c("geneSymbol", SampleLabels[13:21])
write_tsv(normData2, "normData2.txt")
# plot of signal distribution again to see effect of filtering an normalization
p2 <- ggplot(log2.cpm.filtered.norm.df2, aes(x=sample, y=expression, fill=sample)) +
geom_violin(trim = FALSE, show.legend = FALSE) +
stat_summary(fun.y = "median",
geom = "point",
shape = 124, size = 6,
color = "black",
show.legend = FALSE) +
labs(y="log2 expression", x = "sample",
title = "filtered, normalized data") +
coord_flip() +
theme_bw()
plot_grid(p1, p2, labels = c("A", "B"))
rmarkdown::pandoc_version()
rmarkdown::pandoc_version()
library(rmarkdown)
library(knitr)
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE, linewidth=60)
summary(results)
venn(results)
vennDiagram(results)
?vennDiagram
ggplot(myTopHits3, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4) +
geom_point(mapping =NULL, myTopHits3.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=1) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=1) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=1) +
#labs(title="Females from infected mice vs culture",
#subtitle = "Volcano plot comparing expression of genes between females \nsorted from in infected mice versus those sorted from culture.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
panel.border = element_rect(colour = "black", fill=NA, size=1))
library(tidyverse)
ggplot(myTopHits3, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4) +
geom_point(mapping =NULL, myTopHits3.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=1) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=1) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=1) +
#labs(title="Females from infected mice vs culture",
#subtitle = "Volcano plot comparing expression of genes between females \nsorted from in infected mice versus those sorted from culture.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
panel.border = element_rect(colour = "black", fill=NA, size=1))
# setting up model matrix without an intercept
design2 <- model.matrix(~0 + group[13:21, drop = TRUE])
colnames(design2) <- levels(group[13:21, drop = TRUE])
# using VOOM function from Limma package to apply precision weights to each gene
v.myDGEList.filtered.norm2 <- voom(myDGEList.filtered.norm2, design2, plot = FALSE)
fit2 <- lmFit(v.myDGEList.filtered.norm2, design2)
# setting up contrast matrix for two main pairwise comparisons
contrast.matrix2 <- makeContrasts(sexualDevelop = sexual_invitro - asexual_invitro,
asexualGrowth = asexual_invitro - sporozoite_invivo,
levels=design2)
fits2 <- contrasts.fit(fit2, contrast.matrix2)
# extracting stats
ebFit2 <- eBayes(fits2)
# listing stats for all genes in the dataset to be used for making volcano plot
myTopHits3 <- topTable(ebFit2, adjust ="BH", coef=1, number=10000, sort.by="logFC")
myTopHits3 <- as_tibble(myTopHits3, rownames = "geneSymbol")
# subsetting volcano plot datq based on leading edge genes
myTopHits3.carb_metab <- subset(myTopHits3, geneSymbol %in% rownames(carb_metab))
myTopHits3.oocyst_proteomics <- subset(myTopHits3, geneSymbol %in% rownames(oocyst_proteomics))
myTopHits3.DNA_metab <- subset(myTopHits3, geneSymbol %in% rownames(DNA_metab))
myTopHits3.oxidoreductase <- subset(myTopHits3, geneSymbol %in% rownames(oxidoreductase))
ggplot(myTopHits3, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4) +
geom_point(mapping =NULL, myTopHits3.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=1) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=1) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=1) +
#labs(title="Females from infected mice vs culture",
#subtitle = "Volcano plot comparing expression of genes between females \nsorted from in infected mice versus those sorted from culture.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(myTopHits3, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4) +
geom_point(mapping =NULL, myTopHits3.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=0.75) +
geom_vline(xintercept = 1, linetype="longdash", colour="grey", size=0.75) +
geom_vline(xintercept = -1, linetype="longdash", colour="grey", size=0.75) +
#labs(title="Females from infected mice vs culture",
#subtitle = "Volcano plot comparing expression of genes between females \nsorted from in infected mice versus those sorted from culture.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(myTopHits3, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
geom_point(mapping =NULL, myTopHits3.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=0.75) +
geom_vline(xintercept = 1, linetype="longdash", colour="grey", size=0.75) +
geom_vline(xintercept = -1, linetype="longdash", colour="grey", size=0.75) +
#labs(title="Females from infected mice vs culture",
#subtitle = "Volcano plot comparing expression of genes between females \nsorted from in infected mice versus those sorted from culture.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
panel.border = element_rect(colour = "black", fill=NA, size=1))
# volcano plot
ggplot(myTopHits3, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
geom_point(mapping =NULL, myTopHits3.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=1) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=1) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=1) +
labs(title="sexual vs. asexual stages from bulk culture",
subtitle = "Volcano plot comparing expression of genes between sexual (24hr) and asexual stages (48hr) \nfrom bulk cultures of infected HCT-8 cells.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
# setting up model matrix without an intercept
design2 <- model.matrix(~0 + group[13:21, drop = TRUE])
colnames(design2) <- levels(group[13:21, drop = TRUE])
# using VOOM function from Limma package to apply precision weights to each gene
v.myDGEList.filtered.norm2 <- voom(myDGEList.filtered.norm2, design2, plot = FALSE)
fit2 <- lmFit(v.myDGEList.filtered.norm2, design2)
# setting up contrast matrix for two main pairwise comparisons
contrast.matrix2 <- makeContrasts(sexualDevelop = sexual_invitro - asexual_invitro,
asexualGrowth = asexual_invitro - sporozoite_invivo,
levels=design2)
fits2 <- contrasts.fit(fit2, contrast.matrix2)
# extracting stats
ebFit2 <- eBayes(fits2)
# listing stats for all genes in the dataset to be used for making volcano plot
myTopHits3 <- topTable(ebFit2, adjust ="BH", coef=1, number=10000, sort.by="logFC")
myTopHits3 <- as_tibble(myTopHits3, rownames = "geneSymbol")
# subsetting volcano plot datq based on leading edge genes
myTopHits3.carb_metab <- subset(myTopHits3, geneSymbol %in% rownames(carb_metab))
myTopHits3.oocyst_proteomics <- subset(myTopHits3, geneSymbol %in% rownames(oocyst_proteomics))
myTopHits3.DNA_metab <- subset(myTopHits3, geneSymbol %in% rownames(DNA_metab))
myTopHits3.oxidoreductase <- subset(myTopHits3, geneSymbol %in% rownames(oxidoreductase))
# volcano plot
ggplot(myTopHits3, aes(y=-log10(adj.P.Val), x=logFC, text = paste("Symbol:", geneSymbol))) +
geom_point(size=4, alpha = 1/10) +
geom_point(mapping =NULL, myTopHits3.carb_metab, size = 4, colour= "#ED3624", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oocyst_proteomics, size = 4, colour= "#4492C4", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.DNA_metab, size = 4, colour= "#5BB95B", inherit.aes = TRUE) +
geom_point(mapping =NULL, myTopHits3.oxidoreductase, size = 4, colour= "#AA67B2", inherit.aes = TRUE) +
ylim(-0.5,15) +
xlim(-15,15) +
geom_hline(yintercept = -log10(0.01), linetype="longdash", colour="grey", size=1) +
geom_vline(xintercept = 1, linetype="longdash", colour="#BE684D", size=1) +
geom_vline(xintercept = -1, linetype="longdash", colour="#2C467A", size=1) +
labs(title="sexual vs. asexual stages from bulk culture",
subtitle = "Volcano plot comparing expression of genes between sexual (24hr) and asexual stages (48hr) \nfrom bulk cultures of infected HCT-8 cells.") +
theme_bw() +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18),
plot.title = element_text(face="bold"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
myMeiosis <- as_tibble(v.myDGEList.filtered.norm$E, rownames = "geneSymbol") %>%
dplyr::filter(geneSymbol=="cgd7_1690"| geneSymbol=="cgd6_4420"|
geneSymbol=="cgd8_1350"| geneSymbol=="cgd2_510" |
geneSymbol=="cgd1_1420"| geneSymbol=="cgd1_60" |
geneSymbol=="cgd3_4050"| geneSymbol=="cgd5_2790"|
geneSymbol=="cgd4_2860"| geneSymbol=="cgd1_1180"|
geneSymbol=="cgd8_610"| geneSymbol=="cgd7_2370"|
geneSymbol=="cgd8_1620"| geneSymbol=="cgd3_3860"|
geneSymbol=="cgd7_4620"| geneSymbol=="cgd3_4290"|
geneSymbol=="cgd7_2700"| geneSymbol=="cgd7_2310"|
geneSymbol=="cgd7_1850"| geneSymbol=="cgd8_490"|
geneSymbol=="cgd6_4140"| geneSymbol=="cgd1_330"|
geneSymbol=="cgd1_1330"| geneSymbol=="cgd3_2210"|
geneSymbol=="cgd8_1410"| geneSymbol=="cgd6_4760"|
geneSymbol=="cgd1_3670"| geneSymbol=="cgd5_2560"|
geneSymbol=="cgd2_2750"| geneSymbol=="cgd2_2500"|
geneSymbol=="cgd3_3820" | geneSymbol=="cgd5_1750"|
geneSymbol=="cgd8_4950" | geneSymbol=="cgd5_410" |
geneSymbol=="cgd3_3110" | geneSymbol=="cgd7_3110" |
geneSymbol=="cgd4_440" | geneSymbol=="cgd7_2140" |
geneSymbol=="cgd6_6040") %>%
dplyr::select(geneSymbol,asexual_invitro1, asexual_invitro2, asexual_invitro3, asexual_invitro4,
female_invitro1, female_invitro2, female_invitro3, female_invitro4,
female_invivo1, female_invivo2, female_invivo3, female_invivo4)
myMeiosis <-column_to_rownames(myMeiosis, var="geneSymbol")
myMeiosis.matrix <- data.matrix(myMeiosis)
hrMei <- hclust(as.dist(1-cor(t(myMeiosis.matrix), method="pearson")), method="complete") #cluster rows by pearson correlation
heatmap.2(myMeiosis.matrix, Rowv=as.dendrogram(hrMei), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=0.5, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
library(gplots)
heatmap.2(myMeiosis.matrix, Rowv=as.dendrogram(hrMei), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=0.5, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
heatmap.2(myMeiosis.matrix, Rowv=as.dendrogram(hrMei), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1, labRow = NA,
cexRow=0.5, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
Owpx <- as_tibble(v.myDGEList.filtered.norm$E, rownames = "geneSymbol") %>%
dplyr::filter(geneSymbol== "cgd6_2090" |
geneSymbol== "cgd6_200" |
geneSymbol== "cgd4_3090" |
geneSymbol== "cgd7_5150" |
geneSymbol== "cgd4_670" |
geneSymbol== "cgd7_1800" |
geneSymbol== "cgd8_3350" |
geneSymbol== "cgd4_500" |
geneSymbol== "cgd6_210" |
geneSymbol== "cgd7_4810" |
geneSymbol=="cgd7_300"|
geneSymbol=="cgd2_790"|
geneSymbol=="cgd7_3120"|
geneSymbol=="cgd7_1730"|
geneSymbol=="cgd2_490") %>%
dplyr::select(geneSymbol,asexual_invitro1, asexual_invitro2, asexual_invitro3, asexual_invitro4,
female_invitro1, female_invitro2, female_invitro3, female_invitro4,
female_invivo1, female_invivo2, female_invivo3, female_invivo4)
Owpx <-column_to_rownames(Owpx, var="geneSymbol")
Owpx.matrix <- data.matrix(Owpx)
Owxphr <- hclust(as.dist(1-cor(t(Owpx.matrix), method="pearson")), method="complete")
heatmap.2(Owpx.matrix, Rowv=as.dendrogram(Owxphr),  Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=1, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
heatmap.2(Owpx.matrix, Rowv=as.dendrogram(Owxphr),  Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=0.5, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
Oxi <- as_tibble(v.myDGEList.filtered.norm$E, rownames = "geneSymbol") %>%
dplyr::filter(geneSymbol=="cgd8_1700" |
geneSymbol=="cgd7_270" |
geneSymbol=="cgd8_1720" |
geneSymbol=="cgd4_4460" |
geneSymbol=="cgd7_1000" |
geneSymbol=="cgd8_4230" |
geneSymbol=="cgd3_460" |
geneSymbol=="cgd2_210" |
geneSymbol=="cgd5_3230" |
geneSymbol=="cgd6_3720" |
geneSymbol=="cgd4_690" |
geneSymbol=="cgd6_1950" |
geneSymbol=="cgd1_280" |
geneSymbol=="cgd6_2470" |
geneSymbol=="cgd3_3430" |
geneSymbol=="cgd2_2510"|
geneSymbol=="cgd8_2670" |
geneSymbol=="cgd8_380") %>%
dplyr::select(geneSymbol,asexual_invitro1, asexual_invitro2, asexual_invitro3, asexual_invitro4,
female_invitro1, female_invitro2, female_invitro3, female_invitro4,
female_invivo1, female_invivo2, female_invivo3, female_invivo4)
Oxi <-column_to_rownames(Oxi, var="geneSymbol")
Oxi.matrix <- data.matrix(Oxi)
hrOxi <- hclust(as.dist(1-cor(t(Oxi.matrix), method="pearson")), method="complete")
heatmap.2(Oxi.matrix, Rowv=as.dendrogram(hrOxi), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=1, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
heatmap.2(Oxi.matrix, Rowv=as.dendrogram(hrOxi), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=0.5, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
heatmap.2(Protease.matrix, Rowv=as.dendrogram(hrPro), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=0.5, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
heatmap.2(Protease.matrix, Rowv=as.dendrogram(hrPro), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1, labRow = NA,
cexRow=0.5, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
Glycos <- as_tibble(v.myDGEList.filtered.norm$E, rownames = "geneSymbol") %>%
dplyr::filter(geneSymbol=="cgd5_690" |
geneSymbol=="cgd5_3140" |
geneSymbol=="cgd5_2590" |
geneSymbol=="cgd5_790" |
geneSymbol=="cgd1_3720" |
geneSymbol=="cgd1_3730" |
geneSymbol=="cgd3_3590" |
geneSymbol=="cgd8_920" ) %>%
dplyr::select(geneSymbol,asexual_invitro1, asexual_invitro2, asexual_invitro3, asexual_invitro4,
female_invitro1, female_invitro2, female_invitro3, female_invitro4,
female_invivo1, female_invivo2, female_invivo3, female_invivo4)
Glycos <-column_to_rownames(Glycos, var="geneSymbol")
Glycos.matrix <- data.matrix(Glycos)
hrGly <- hclust(as.dist(1-cor(t(Glycos.matrix), method="pearson")), method="complete")
heatmap.2(Glycos.matrix, Rowv=as.dendrogram(hrGly), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=1, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
myAMY <- as_tibble(v.myDGEList.filtered.norm$E, rownames = "geneSymbol") %>%
dplyr::filter(geneSymbol=="cgd6_3750" |
geneSymbol=="cgd5_2910" |
geneSymbol=="cgd3_1580" |
geneSymbol=="cgd2_3270" |
geneSymbol=="cgd2_3260" |
geneSymbol=="cgd2_2340" |
geneSymbol=="cgd4_2600" |
geneSymbol=="cgd6_2450" |
geneSymbol=="cgd6_3280" |
geneSymbol=="cgd8_4940" |
geneSymbol=="cgd6_880" |
geneSymbol=="cgd7_1830" |
geneSymbol=="cgd7_910" |
geneSymbol=="cgd1_3020" |
geneSymbol=="cgd6_3790" |
geneSymbol=="cgd6_3800" |
geneSymbol=="cgd1_2040" |
geneSymbol=="cgd1_3040" |
geneSymbol=="cgd3_1400" |
geneSymbol=="cgd1_3060" |
geneSymbol=="cgd7_4270") %>%
dplyr::select(geneSymbol,asexual_invitro1, asexual_invitro2, asexual_invitro3, asexual_invitro4,
female_invitro1, female_invitro2, female_invitro3, female_invitro4,
female_invivo1, female_invivo2, female_invivo3, female_invivo4)
myAMY <-column_to_rownames(myAMY, var="geneSymbol")
myAMY.matrix <- data.matrix(myAMY)
hrAMY <- hclust(as.dist(1-cor(t(myAMY.matrix), method="pearson")), method="complete")
heatmap.2(myAMY.matrix, Rowv=as.dendrogram(hrAMY), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=1, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
heatmap.2(myAMY.matrix, Rowv=as.dendrogram(hrAMY), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=0.5, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
myAP2 <- as_tibble(v.myDGEList.filtered.norm$E, rownames = "geneSymbol") %>%
dplyr::filter(geneSymbol=="cgd4_1110" | geneSymbol=="cgd8_3130" |
geneSymbol=="cgd8_3230" |geneSymbol=="cgd1_3520" |
geneSymbol=="cgd2_3490" | geneSymbol=="cgd4_3820" |
geneSymbol=="cgd4_600" | geneSymbol=="cgd5_2570" | geneSymbol=="cgd5_4250" |
geneSymbol=="cgd8_810" | geneSymbol=="cgd4_2950" |
geneSymbol=="cgd6_2600" | geneSymbol=="cgd6_2670" | geneSymbol=="cgd3_1980" |
geneSymbol=="cgd3_2970" | geneSymbol=="cgd6_1140" | geneSymbol=="cgd6_5320") %>%
dplyr::select(geneSymbol,asexual_invitro1, asexual_invitro2, asexual_invitro3, asexual_invitro4,
female_invitro1, female_invitro2, female_invitro3, female_invitro4,
female_invivo1, female_invivo2, female_invivo3, female_invivo4)
myAP2 <-column_to_rownames(myAP2, var="geneSymbol")
myAP2.matrix <- data.matrix(myAP2)
hrAP2 <- hclust(as.dist(1-cor(t(myAP2.matrix), method="pearson")), method="complete")
heatmap.2(myAP2.matrix, Rowv=as.dendrogram(hrAP2), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=1, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
heatmap.2(myAP2.matrix, Rowv=as.dendrogram(hrAP2), Colv=NA,
col=myheatcol, scale="row", density.info="none",
trace="none", key = 1,
cexRow=0.5, cexCol=0.75, margins=c(10,20),
dendrogram = "none")
